macro(get_dir_name var)
  get_filename_component(${var} ${CMAKE_CURRENT_SOURCE_DIR} NAME)
endmacro()

function(add_problem id)
  foreach(lang ${ARGN})
    if(${lang} STREQUAL c)
      add_library(solution-${id}-c c/solution.c)
      add_library(solution-${id}-cpp-c c/interface.cpp)
      target_link_libraries(solution-${id}-cpp-c PRIVATE solution-${id}-c)
      list(APPEND solutions solution-${id}-cpp-c)
    elseif(${lang} STREQUAL cpp)
      add_library(solution-${id}-cpp cpp/interface.cpp)
      set_property(TARGET solution-${id}-cpp PROPERTY CXX_STANDARD 20)
      list(APPEND solutions solution-${id}-cpp)
    else()
      message(FATAL_ERROR "Unknown language: ${lang}")
    endif()
  endforeach()
endfunction()

function(add_problem_test target)
  add_executable(${target} ${ARGN})
  set_property(TARGET ${target} PROPERTY CXX_STANDARD 20)
  target_link_libraries(${target} PRIVATE Catch2::Catch2WithMain ${solutions})
  catch_discover_tests(${target})
endfunction()

file(GLOB problems LIST_DIRECTORIES true "*")
foreach(problem ${problems})
  if(IS_DIRECTORY ${problem})
    add_subdirectory(${problem})
  endif()
endforeach()
